import matplotlib
import folium as folium
from folium.plugins import FastMarkerCluster
import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
from geopy import distance
from shapely.geometry import Point

with st.echo(code_location='below'):
    matplotlib.use("Agg")
    st.set_option('deprecation.showPyplotGlobalUse', False)


    @st.cache(persist=True, show_spinner=True)
    def get_data(rows):
        data_url = (
            "https://github.com/fatcat-klm/vsosh/raw/main/flavors_of_cacao%20(2)%20-%20flavors_of_cacao%20(2).csv.zip")
        df = pd.read_csv(data_url, nrows=rows)
        return df


    df = get_data(50000)
    st.sidebar.subheader('–û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∞—Ç–∞—Å–µ—Ç–∞')
    st.sidebar.subheader('–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ')
    st.markdown("### –ß—Ç–æ-—Ç–æ –ø—Ä–æ  —à–æ–∫–æ–ª–∞–¥")
    st.markdown(
        "–ß—Ç–æ-—Ç–æ –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ –ø–∞—Ä–æ —à–æ–∫–æ–ª–∞–¥ –ø–∏—à–µ–º")
    if st.button("üéà"):
        st.balloons()
    st.markdown(
        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã—è–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä,—á–µ–≥–æ-—Ç–æ —Ç–∞–º")
    st.markdown(" ### –ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö")
    if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞—Ç–∞—Å–µ—Ç", False):
        st.subheader('–î–∞—Ç–∞—Å–µ—Ç')
        st.write(df)
    df1 = df.copy(deep=True)

    if st.checkbox("–ü–æ—Å—Ç—Ä–æ–∏–º —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –ø—Ä–æ–∏—Ö–∑–≤–æ–¥–∏—Ç–µ–ª—è–º", False):
        st.subheader('–†–µ–π—Ç–∏–Ω–≥')
        dict1 = df1.groupby('Company').aggregate(np.sum)['Add'].to_dict()
        sorted_values = sorted(dict1.values())
        new_sorted_dict = {}
        for i in sorted_values:
            for j in dict1.keys():
                if dict1[j] == i:
                    new_sorted_dict[j] = dict1[j]
                    break
        st.write(new_sorted_dict)

    st.title('–û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∞—Ç–∞—Å–µ—Ç–∞')
    if st.sidebar.checkbox('–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö'):
        st.subheader('–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:')
        st.write(df.head())
    if st.sidebar.checkbox('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã'):
        st.subheader('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:')
        st.write(df.columns.to_list())
    if st.sidebar.checkbox('–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –æ–ø–∏—Å—ã–≤–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ'):
        st.subheader('–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –æ–ø–∏—Å—ã–≤–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ')
        st.write(df.describe())
    st.title('–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ')
    st.sidebar.markdown("## –ú–µ–Ω—è–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
    st.info(
        "–ï—Å–ª–∏ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞, —Ç–æ —Ñ–æ—Ä–º–∞—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π")
    if st.sidebar.checkbox('Count Plot'):
        st.subheader('Count Plot')
        column_count_plot_x = st.sidebar.selectbox("–• –ü–æ–¥—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: ", df.columns)
        column_count_plot_y = st.sidebar.selectbox("Y –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è:",
                                                   df.columns.insert(0, None))
        fig = sns.countplot(x=column_count_plot_x, hue=column_count_plot_y, data=df, palette="husl",
                            labels=[df.columns.insert(0, None)])
        st.pyplot()
    if st.sidebar.checkbox('Boxplot'):
        st.subheader('Boxplot')
        column_box_plot_X = st.sidebar.selectbox("X –ü–æ–¥—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:", df.columns)
        column_box_plot_Y = st.sidebar.selectbox("Y: ", df.columns.insert(0, None))
        column_box_plot_Z = st.sidebar.selectbox("Z –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è:", df.columns.insert(0, None))
        fig = sns.boxplot(x=column_box_plot_X, y=column_box_plot_Y, hue=column_box_plot_Z, data=df, palette="husl",
                          labels=[df.columns.insert(0, None)])
        st.pyplot()
    if st.sidebar.checkbox('Distplot'):
        st.subheader('Distplot')
        column_dist_plot = st.sidebar.selectbox("–ü–æ–¥—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:", df.columns)
        fig = sns.distplot(df[column_dist_plot])
        st.pyplot()
    if st.sidebar.checkbox('Pairplot'):
        st.subheader('Pairplot')
        column_pair_plot = st.sidebar.selectbox("X –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è:)", df.columns)
        fig = sns.pairplot(df, hue=column_pair_plot, palette="husl")
        st.pyplot()
    st.sidebar.markdown(
        "[–ò—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞](https://www.kaggle.com/datasets/rtatman/chocolate-bar-ratings)")
